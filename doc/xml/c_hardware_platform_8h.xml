<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="c_hardware_platform_8h" kind="file">
    <compoundname>cHardwarePlatform.h</compoundname>
    <includes refid="datatypes_8h" local="yes">datatypes.h</includes>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes refid="c_hardware_platform___win_8h" local="yes">cHardwarePlatform_Win.h</includes>
    <includedby refid="c_hardware_platform_8cpp" local="yes">bmengine/cHardwarePlatform.cpp</includedby>
    <includedby refid="c_hardware_platform___win_8h" local="yes">bmengine/cHardwarePlatform_Win.h</includedby>
    <includedby refid="core_8h" local="yes">bmengine/core.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>Windows.h</label>
      </node>
      <node id="16">
        <label>comdef.h</label>
      </node>
      <node id="15">
        <label>cHardwarePlatform_Win.h</label>
        <link refid="c_hardware_platform___win_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>datatypes_Win.h</label>
        <link refid="datatypes___win_8h_source"/>
      </node>
      <node id="12">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>datatypes.h</label>
        <link refid="datatypes_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>bmengine/cHardwarePlatform.h</label>
        <link refid="cHardwarePlatform.h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Wbemidl.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20">
        <label>bmengine/cHardwarePlatform_Win.h</label>
        <link refid="c_hardware_platform___win_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>bmengine/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>bmengine/main.cpp</label>
        <link refid="main_8cpp_source"/>
      </node>
      <node id="19">
        <label>bmengine/cHardwarePlatform.cpp</label>
        <link refid="c_hardware_platform_8cpp_source"/>
      </node>
      <node id="18">
        <label>bmengine/cHardwarePlatform.h</label>
        <link refid="cHardwarePlatform.h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>bmengine/cHardwarePlatform_Win.cpp</label>
        <link refid="c_hardware_platform___win_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structs_platform_info" prot="public">sPlatformInfo</innerclass>
    <innerclass refid="classc_hardware_platform" prot="public">cHardwarePlatform</innerclass>
    <briefdescription>
<para>Provides declarations for the abstracted/null driver hardware platform class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>_CHARDWAREPLATFORM_H_</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_CHARDWAREPLATFORM_H_</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datatypes_8h" kindref="compound" tooltip="Provides the directed include of abstracted dataypes.">datatypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound" tooltip="Provides platform/compiler specific defines and includes.">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structs_platform_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structs_platform_info" kindref="compound">sPlatformInfo</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>tReal32<sp/><sp/><sp/><sp/><sp/>CPUSpeed;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>tReal32<sp/><sp/><sp/><sp/><sp/>diskAccess;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>tReal32<sp/><sp/><sp/><sp/><sp/>diskRead;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>tuInt32<sp/><sp/><sp/><sp/><sp/>numCPUs;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>tuInt32<sp/><sp/><sp/><sp/><sp/>numMemBanks;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>tMemSize<sp/><sp/><sp/><sp/>memSize;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>tuChar8*<sp/><sp/><sp/><sp/>name;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classc_hardware_platform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classc_hardware_platform" kindref="compound">cHardwarePlatform</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classc_hardware_platform" kindref="compound">cHardwarePlatform</ref>*<sp/><ref refid="classc_hardware_platform_1a3ae27498942d583b9a8180b9db977047" kindref="member" tooltip="Gets this instance. ">Get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tReal32<sp/><sp/><sp/><sp/><sp/><ref refid="classc_hardware_platform_1acb2c34ae1c8a1afb0124ce284d44c156" kindref="member" tooltip="Gets the CPU speed. ">getCPUSpeed</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tuChar8*<sp/><sp/><sp/><sp/>getDevURL(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tReal32<sp/><sp/><sp/><sp/><sp/>getDiskAccessSpeed(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tReal32<sp/><sp/><sp/><sp/><sp/>getDiskReadSpeed(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tuChar8*<sp/><sp/><sp/><sp/>getDocsURL(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tMemSize<sp/><sp/><sp/><sp/>getMemorySize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tuInt32<sp/><sp/><sp/><sp/><sp/>getNumCPUs(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tuInt32<sp/><sp/><sp/><sp/><sp/>getNumMemBanks(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>tuChar8*<sp/><sp/><sp/><sp/>getPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classc_hardware_platform" kindref="compound">cHardwarePlatform</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classc_hardware_platform" kindref="compound">cHardwarePlatform</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classc_hardware_platform" kindref="compound">cHardwarePlatform</ref>*<sp/>sm_pinstance;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WINDOWS</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;<ref refid="c_hardware_platform___win_8h" kindref="compound" tooltip="Provides declarations for windows-specific hardware platform.">cHardwarePlatform_Win.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>UNIX</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;cHardwarePlatform_Unix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_CHARDWAREPLATFORM_H_</highlight></codeline>
    </programlisting>
    <location file="D:/Projects/bmengine/bmengine/cHardwarePlatform.h"/>
  </compounddef>
</doxygen>
