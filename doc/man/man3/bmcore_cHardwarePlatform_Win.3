.TH "bmcore::cHardwarePlatform_Win" 3 "Tue Feb 12 2013" "Version 0.1" "Bad Monkey Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
bmcore::cHardwarePlatform_Win \- 
.PP
Windows specific implementation for the cHardwarPlatform class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <cHardwarePlatform_Win\&.h>\fP
.PP
Inherits \fBbmcore::cHardwarePlatform\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual tReal32 \fBgetCPUSpeed\fP (void)"
.br
.RI "\fIReturns the maximum operating frequency of the platform CPU as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tuChar8 * \fBgetDevURL\fP (void)"
.br
.RI "\fIObtains the URL for this project\&. \fP"
.ti -1c
.RI "virtual tReal32 \fBgetDiskAccessSpeed\fP (void)"
.br
.RI "\fIObtains the average HDD access speed as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tReal32 \fBgetDiskReadSpeed\fP (void)"
.br
.RI "\fIObtains the average HDD read speed as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tuChar8 * \fBgetDocsURL\fP (void)"
.br
.RI "\fIObtains the relative local location of this projects documentation\&. \fP"
.ti -1c
.RI "virtual tMemSize \fBgetMemorySize\fP (void)"
.br
.RI "\fIObtains the total installed physical memory as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tuInt32 \fBgetNumCPUs\fP (void)"
.br
.RI "\fIObtains the number of CPU cores as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tuInt32 \fBgetNumMemBanks\fP (void)"
.br
.RI "\fIObtains the number of physical memory slots as reported by WMI\&. \fP"
.ti -1c
.RI "virtual tuChar8 * \fBgetPlatform\fP (void)"
.br
.RI "\fIObtains the platform name as reported by WMI\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBcHardwarePlatform_Win\fP * \fBGet\fP (void)"
.br
.RI "\fIObtains the singleton instance of \fBcHardwarePlatform_Win\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Windows specific implementation for the cHardwarPlatform class\&. 

\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform\fP 
.RE
.PP

.PP
Definition at line 30 of file cHardwarePlatform_Win\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBcHardwarePlatform_Win\fP * bmcore::cHardwarePlatform_Win::Get (void)\fC [static]\fP"

.PP
Obtains the singleton instance of \fBcHardwarePlatform_Win\fP\&. \fBcHardwarePlatform_Win::Get\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally when providing the \fBcHardwarePlatform\fP singleton instance\&.
.PP
\fBReturns:\fP
.RS 4
The pointer to the singleton instance of \fBcHardwarePlatform_Win\fP
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::Get\fP 
.RE
.PP

.PP
Definition at line 7 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        if (NULL == sm_pinstance)
            sm_pinstance = new cHardwarePlatform_Win();

        return sm_pinstance;
    }
.fi
.SS "tReal32 bmcore::cHardwarePlatform_Win::getCPUSpeed (void)\fC [virtual]\fP"

.PP
Returns the maximum operating frequency of the platform CPU as reported by WMI\&. \fBcHardwarePlatform_Win::getCPUSpeed\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
The frequency of the CPU as a real number in GHz
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getCPUSpeed\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 36 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.CPUSpeed;
    }
.fi
.SS "tuChar8 * bmcore::cHardwarePlatform_Win::getDevURL (void)\fC [virtual]\fP"

.PP
Obtains the URL for this project\&. \fBcHardwarePlatform_Win::getDevURL\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A character array containing the web URL for this project
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getDevURL\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 41 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return (tuChar8*)'https://sourceforge\&.net/users/michaelkelly322';
    }
.fi
.SS "tReal32 bmcore::cHardwarePlatform_Win::getDiskAccessSpeed (void)\fC [virtual]\fP"

.PP
Obtains the average HDD access speed as reported by WMI\&. \fBcHardwarePlatform_Win::getDiskAccessSpeed\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A real number average disk access speed in MB/s
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getDiskAccessSpeed\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 46 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.diskAccess;
    }
.fi
.SS "tReal32 bmcore::cHardwarePlatform_Win::getDiskReadSpeed (void)\fC [virtual]\fP"

.PP
Obtains the average HDD read speed as reported by WMI\&. \fBcHardwarePlatform_Win::getDiskReadSpeed\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A real number average disk read speed in MB/s
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getDiskReadSpeed\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 51 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.diskRead;
    }
.fi
.SS "tuChar8 * bmcore::cHardwarePlatform_Win::getDocsURL (void)\fC [virtual]\fP"

.PP
Obtains the relative local location of this projects documentation\&. \fBcHardwarePlatform_Win::getDocsURL\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A character array containing the relative local location of documentation
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getDocsURL\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 56 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return (tuChar8*)'\&./docs';
    }
.fi
.SS "tMemSize bmcore::cHardwarePlatform_Win::getMemorySize (void)\fC [virtual]\fP"

.PP
Obtains the total installed physical memory as reported by WMI\&. \fBcHardwarePlatform_Win::getMemorySize\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A memsize value representing the total physical memory in MB
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getMemorySize\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 61 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.memSize;
    }
.fi
.SS "tuInt32 bmcore::cHardwarePlatform_Win::getNumCPUs (void)\fC [virtual]\fP"

.PP
Obtains the number of CPU cores as reported by WMI\&. \fBcHardwarePlatform_Win::getNumCPUs\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&. The number of cores represents the logical cores, therefore, hyperthreading will change this value
.PP
\fBReturns:\fP
.RS 4
An integer value representing the number of CPU cores
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getNumCPUs\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 66 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.numCPUs;
    }
.fi
.SS "tuInt32 bmcore::cHardwarePlatform_Win::getNumMemBanks (void)\fC [virtual]\fP"

.PP
Obtains the number of physical memory slots as reported by WMI\&. \fBcHardwarePlatform_Win::getNumMemBanks\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
The number of memory slots on the platform
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getNumMemBanks\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 71 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.numMemBanks;
    }
.fi
.SS "tuChar8 * bmcore::cHardwarePlatform_Win::getPlatform (void)\fC [virtual]\fP"

.PP
Obtains the platform name as reported by WMI\&. \fBcHardwarePlatform_Win::getPlatform\fP
.PP
This method should not be called directly from any of your code\&. it is designed to be used internally\&.
.PP
\fBReturns:\fP
.RS 4
A character array containing the name of the platform
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBcHardwarePlatform::getPlatform\fP 
.RE
.PP

.PP
Reimplemented from \fBbmcore::cHardwarePlatform\fP\&.
.PP
Definition at line 76 of file cHardwarePlatform_Win\&.cpp\&.
.PP
.nf
    {
        return m_sysInfo\&.name;
    }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Bad Monkey Engine from the source code\&.
